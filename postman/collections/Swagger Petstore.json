{
	"info": {
		"_postman_id": "f92d88a0-eddb-421a-9d6b-1377596936da",
		"name": "Swagger Petstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "21308219-f92d88a0-eddb-421a-9d6b-1377596936da"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "{pet Id}",
					"item": [
						{
							"name": "Find pet by ID",
							"id": "ceca6488-fa42-4207-9882-abf713ba257f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-43253178",
											"description": "(Required) ID of pet to return"
										}
									]
								},
								"description": "Returns a single pet"
							},
							"response": [
								{
									"id": "8e82c13a-c32f-4a11-9776-f572264e1221",
									"name": "successful operation",
									"originalRequest": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) ID of pet to return"
												}
											]
										},
										"description": "Returns a single pet"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"consectetur ea\",\n    \"eu dolore Excepteur sunt reprehenderit\"\n  ],\n  \"id\": 93430911,\n  \"category\": {\n    \"id\": -23868283,\n    \"name\": \"id consectetur fugiat\"\n  },\n  \"tags\": [\n    {\n      \"id\": 92889809,\n      \"name\": \"occaecat ad do\"\n    },\n    {\n      \"id\": -57399957,\n      \"name\": \"pariat\"\n    }\n  ],\n  \"status\": \"available\"\n}"
								},
								{
									"id": "35653cf8-9754-4608-b9ff-b5e6536b757c",
									"name": "Invalid ID supplied",
									"originalRequest": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) ID of pet to return"
												}
											]
										},
										"description": "Returns a single pet"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "5e694c18-d3fd-4dbe-926d-39fa07783c9d",
									"name": "Pet not found",
									"originalRequest": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "<API Key>",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) ID of pet to return"
												}
											]
										},
										"description": "Returns a single pet"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates a pet in the store with form data",
							"id": "3e534475-b25c-4f8b-9eb4-c0d4a3a31eac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "in voluptate Lorem",
											"description": "Updated name of the pet"
										},
										{
											"key": "status",
											"value": "elit",
											"description": "Updated status of the pet"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-43253178",
											"description": "(Required) ID of pet that needs to be updated"
										}
									]
								}
							},
							"response": [
								{
									"id": "e30bd625-bc88-4070-94a0-a30991dc4459",
									"name": "Invalid input",
									"originalRequest": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "in voluptate Lorem",
													"description": "Updated name of the pet"
												},
												{
													"key": "status",
													"value": "elit",
													"description": "Updated status of the pet"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) ID of pet that needs to be updated"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes a pet",
							"id": "606999e4-b17f-431e-b270-0eed811a1f83",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "non do eiusmod magna ea"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-43253178",
											"description": "(Required) Pet id to delete"
										}
									]
								}
							},
							"response": [
								{
									"id": "98a502e9-4cd1-45b9-801f-611e8ccb6ac0",
									"name": "Invalid ID supplied",
									"originalRequest": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "non do eiusmod magna ea"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) Pet id to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "57c02f85-0f7d-4b43-bfe7-0c1421560a46",
									"name": "Pet not found",
									"originalRequest": {
										"auth": {
											"type": "oauth2"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "non do eiusmod magna ea"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) Pet id to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "uploads an image",
							"id": "e55a6923-51e4-43b5-beef-d94e541485e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "additionalMetadata",
											"value": "dolor in Excepteur",
											"type": "text",
											"description": "Additional data to pass to server"
										},
										{
											"key": "file",
											"type": "file",
											"description": "file to upload",
											"value": null
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/:petId/uploadImage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId",
										"uploadImage"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-43253178",
											"description": "(Required) ID of pet to update"
										}
									]
								}
							},
							"response": [
								{
									"id": "bba8c168-3d01-43fe-9a1a-e7376e4d4c29",
									"name": "successful operation",
									"originalRequest": {
										"auth": {
											"type": "oauth2"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "additionalMetadata",
													"value": "dolor in Excepteur",
													"type": "text",
													"description": "Additional data to pass to server"
												},
												{
													"key": "file",
													"type": "file",
													"description": "file to upload",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId/uploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId",
												"uploadImage"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-43253178",
													"description": "(Required) ID of pet to update"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": 68810830,\n  \"type\": \"tempor laboris\",\n  \"message\": \"sed sint sunt\"\n}"
								}
							]
						}
					],
					"id": "21eb871d-f30a-483a-867a-c59cd513490b"
				},
				{
					"name": "Add a new pet to the store",
					"id": "b1178361-acda-41e2-8114-93dd92bd79b9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"nulla dolor mollit\",\n    \"enim eiusmod\"\n  ],\n  \"id\": 15885168,\n  \"category\": {\n    \"id\": 25984157,\n    \"name\": \"eu amet\"\n  },\n  \"tags\": [\n    {\n      \"id\": 65049151,\n      \"name\": \"cillum veniam do aliquip\"\n    },\n    {\n      \"id\": 13570101,\n      \"name\": \"aliquip eu occaecat labore\"\n    }\n  ],\n  \"status\": \"sold\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": [
						{
							"id": "d57fba0c-3bff-4ac5-b2c9-e424097e380c",
							"name": "Invalid input",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"nulla dolor mollit\",\n    \"enim eiusmod\"\n  ],\n  \"id\": 15885168,\n  \"category\": {\n    \"id\": 25984157,\n    \"name\": \"eu amet\"\n  },\n  \"tags\": [\n    {\n      \"id\": 65049151,\n      \"name\": \"cillum veniam do aliquip\"\n    },\n    {\n      \"id\": 13570101,\n      \"name\": \"aliquip eu occaecat labore\"\n    }\n  ],\n  \"status\": \"sold\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an existing pet",
					"id": "b9d0ff3d-6948-498e-9af4-115a14122105",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"consectetur ea\",\n    \"eu dolore Excepteur sunt reprehenderit\"\n  ],\n  \"id\": 93430911,\n  \"category\": {\n    \"id\": -23868283,\n    \"name\": \"id consectetur fugiat\"\n  },\n  \"tags\": [\n    {\n      \"id\": 92889809,\n      \"name\": \"occaecat ad do\"\n    },\n    {\n      \"id\": -57399957,\n      \"name\": \"pariat\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": [
						{
							"id": "79eba372-a454-4921-949c-a0e5b43a5543",
							"name": "Invalid ID supplied",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"consectetur ea\",\n    \"eu dolore Excepteur sunt reprehenderit\"\n  ],\n  \"id\": 93430911,\n  \"category\": {\n    \"id\": -23868283,\n    \"name\": \"id consectetur fugiat\"\n  },\n  \"tags\": [\n    {\n      \"id\": 92889809,\n      \"name\": \"occaecat ad do\"\n    },\n    {\n      \"id\": -57399957,\n      \"name\": \"pariat\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "62fc3883-6c1f-4327-bf39-87540a331fd2",
							"name": "Pet not found",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"consectetur ea\",\n    \"eu dolore Excepteur sunt reprehenderit\"\n  ],\n  \"id\": 93430911,\n  \"category\": {\n    \"id\": -23868283,\n    \"name\": \"id consectetur fugiat\"\n  },\n  \"tags\": [\n    {\n      \"id\": 92889809,\n      \"name\": \"occaecat ad do\"\n    },\n    {\n      \"id\": -57399957,\n      \"name\": \"pariat\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "fab89e34-39c7-4b3f-8506-a56ebb36760a",
							"name": "Validation exception",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"consectetur ea\",\n    \"eu dolore Excepteur sunt reprehenderit\"\n  ],\n  \"id\": 93430911,\n  \"category\": {\n    \"id\": -23868283,\n    \"name\": \"id consectetur fugiat\"\n  },\n  \"tags\": [\n    {\n      \"id\": 92889809,\n      \"name\": \"occaecat ad do\"\n    },\n    {\n      \"id\": -57399957,\n      \"name\": \"pariat\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finds Pets by status",
					"id": "b7c34c7b-4692-483f-98e8-f22fae68a304",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available",
									"description": "(Required) Status values that need to be considered for filter"
								},
								{
									"key": "status",
									"value": "available",
									"description": "(Required) Status values that need to be considered for filter"
								}
							]
						},
						"description": "Multiple status values can be provided with comma separated strings"
					},
					"response": [
						{
							"id": "296916b1-ae88-447b-aeae-5ad0539f21ec",
							"name": "successful operation",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										},
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"nis\",\n      \"minim\"\n    ],\n    \"id\": 66827085,\n    \"category\": {\n      \"id\": -31371158,\n      \"name\": \"aute velit\"\n    },\n    \"tags\": [\n      {\n        \"id\": -42473132,\n        \"name\": \"voluptate amet\"\n      },\n      {\n        \"id\": 36769932,\n        \"name\": \"dolor reprehenderit in\"\n      }\n    ],\n    \"status\": \"sold\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"exercita\",\n      \"velit\"\n    ],\n    \"id\": -23924202,\n    \"category\": {\n      \"id\": -90463378,\n      \"name\": \"non Lorem ad deserunt\"\n    },\n    \"tags\": [\n      {\n        \"id\": 36681266,\n        \"name\": \"veniam incididunt irure Lorem\"\n      },\n      {\n        \"id\": 190255,\n        \"name\": \"dolor\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
						},
						{
							"id": "0ac7c899-cfec-4abb-8184-64a6fabf9b27",
							"name": "Invalid status value",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										},
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Finds Pets by tags",
					"id": "0cef6fdb-640f-4d27-a9c4-201477c2185e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/findByTags?tags=tempor ipsum minim&tags=mi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tempor ipsum minim",
									"description": "(Required) Tags to filter by"
								},
								{
									"key": "tags",
									"value": "mi",
									"description": "(Required) Tags to filter by"
								}
							]
						},
						"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
					},
					"response": [
						{
							"id": "e176e8cb-80d0-42fc-800f-c85bb70ce558",
							"name": "successful operation",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=tempor ipsum minim&tags=mi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "tempor ipsum minim",
											"description": "(Required) Tags to filter by"
										},
										{
											"key": "tags",
											"value": "mi",
											"description": "(Required) Tags to filter by"
										}
									]
								},
								"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"nis\",\n      \"minim\"\n    ],\n    \"id\": 66827085,\n    \"category\": {\n      \"id\": -31371158,\n      \"name\": \"aute velit\"\n    },\n    \"tags\": [\n      {\n        \"id\": -42473132,\n        \"name\": \"voluptate amet\"\n      },\n      {\n        \"id\": 36769932,\n        \"name\": \"dolor reprehenderit in\"\n      }\n    ],\n    \"status\": \"sold\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"exercita\",\n      \"velit\"\n    ],\n    \"id\": -23924202,\n    \"category\": {\n      \"id\": -90463378,\n      \"name\": \"non Lorem ad deserunt\"\n    },\n    \"tags\": [\n      {\n        \"id\": 36681266,\n        \"name\": \"veniam incididunt irure Lorem\"\n      },\n      {\n        \"id\": 190255,\n        \"name\": \"dolor\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
						},
						{
							"id": "0cfbc66c-149b-4fd9-aedb-b89d681da7b0",
							"name": "Invalid tag value",
							"originalRequest": {
								"auth": {
									"type": "oauth2"
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=tempor ipsum minim&tags=mi",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "tempor ipsum minim",
											"description": "(Required) Tags to filter by"
										},
										{
											"key": "tags",
											"value": "mi",
											"description": "(Required) Tags to filter by"
										}
									]
								},
								"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "1963edc3-fba8-46a9-b1f6-90bcf8340672"
		},
		{
			"name": "store",
			"item": [
				{
					"name": "order",
					"item": [
						{
							"name": "{order Id}",
							"item": [
								{
									"name": "Find purchase order by ID",
									"id": "03e45134-b576-4c62-83a6-7adc31adc4b9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId",
													"value": "1",
													"description": "(Required) ID of pet that needs to be fetched"
												}
											]
										},
										"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
									},
									"response": [
										{
											"id": "3f263f16-035f-4e54-8f2f-d36094ed3f42",
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "1",
															"description": "(Required) ID of pet that needs to be fetched"
														}
													]
												},
												"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": -36912432,\n  \"petId\": 59968776,\n  \"quantity\": 5077074,\n  \"shipDate\": \"1969-03-22T14:56:30.778Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
										},
										{
											"id": "d482912a-d77e-433c-8e28-b962539831cf",
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "1",
															"description": "(Required) ID of pet that needs to be fetched"
														}
													]
												},
												"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "b666b6c4-6ef1-475e-9b71-aea8dd5910ed",
											"name": "Order not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "1",
															"description": "(Required) ID of pet that needs to be fetched"
														}
													]
												},
												"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete purchase order by ID",
									"id": "f81a59d0-d7f1-410a-b8a5-ee04cec76c28",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId",
													"value": "93001276",
													"description": "(Required) ID of the order that needs to be deleted"
												}
											]
										},
										"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
									},
									"response": [
										{
											"id": "9848f9f8-111f-4926-a09c-74fadb45dfc6",
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "93001276",
															"description": "(Required) ID of the order that needs to be deleted"
														}
													]
												},
												"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "cef38305-18fa-45c1-ba2c-fdab55425f59",
											"name": "Order not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId",
															"value": "93001276",
															"description": "(Required) ID of the order that needs to be deleted"
														}
													]
												},
												"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							],
							"id": "a12615e8-3df0-4362-aaf0-01fd1ab6ed34"
						},
						{
							"name": "Place an order for a pet",
							"id": "2bc47285-b942-4b8d-9f6c-d14b91de2e5f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -36912432,\n  \"petId\": 59968776,\n  \"quantity\": 5077074,\n  \"shipDate\": \"1969-03-22T14:56:30.778Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": [
								{
									"id": "8e3a6c03-8c98-4d87-9ea3-20ebf8290d94",
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -36912432,\n  \"petId\": 59968776,\n  \"quantity\": 5077074,\n  \"shipDate\": \"1969-03-22T14:56:30.778Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -36912432,\n  \"petId\": 59968776,\n  \"quantity\": 5077074,\n  \"shipDate\": \"1969-03-22T14:56:30.778Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
								},
								{
									"id": "4b9abbd5-c622-48fa-b270-113c0c52d056",
									"name": "Invalid Order",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -36912432,\n  \"petId\": 59968776,\n  \"quantity\": 5077074,\n  \"shipDate\": \"1969-03-22T14:56:30.778Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "8b79abaf-0b17-416e-bb53-e8a59b9ff9af"
				},
				{
					"name": "Returns pet inventories by status",
					"id": "928441a2-4f14-4d09-9cc8-d729a065f996",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api_key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "<API Key>",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						},
						"description": "Returns a map of status codes to quantities"
					},
					"response": [
						{
							"id": "b62403e3-63ac-4288-932e-cb4d457a26eb",
							"name": "successful operation",
							"originalRequest": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/store/inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"inventory"
									]
								},
								"description": "Returns a map of status codes to quantities"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"ipsum_b27\": 73440465,\n  \"adipisicing_31a\": -74731247,\n  \"sunt3b\": -29590171\n}"
						}
					]
				}
			],
			"id": "bbdee68b-1d03-4416-a143-659771f0952d"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "{username}",
					"item": [
						{
							"name": "Get user by user name",
							"id": "534f1c7a-104c-4ce6-ac36-4662159e1dd0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "non do eiusmod magna ea",
											"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
										}
									]
								}
							},
							"response": [
								{
									"id": "564a16fd-0e76-4e41-aac4-1efe53e80aa9",
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -66684654,\n  \"username\": \"do eiusmod\",\n  \"firstName\": \"irure Duis labori\",\n  \"lastName\": \"aute voluptate dolore in\",\n  \"email\": \"magna\",\n  \"password\": \"sunt ut commodo officia\",\n  \"phone\": \"veniam aliquip\",\n  \"userStatus\": 42889673\n}"
								},
								{
									"id": "ec1ce6e3-d724-41fa-8432-d269a21507ce",
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ff4a4b95-9653-49eb-8cf0-347a2b49aa4a",
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updated user",
							"id": "d7756f56-07c9-4648-82d3-ff4a1cbf0b31",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -66684654,\n  \"username\": \"do eiusmod\",\n  \"firstName\": \"irure Duis labori\",\n  \"lastName\": \"aute voluptate dolore in\",\n  \"email\": \"magna\",\n  \"password\": \"sunt ut commodo officia\",\n  \"phone\": \"veniam aliquip\",\n  \"userStatus\": 42889673\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "non do eiusmod magna ea",
											"description": "(Required) name that need to be updated"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"id": "6fe52276-ef05-404c-bb85-caeebacc3d66",
									"name": "Invalid user supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -66684654,\n  \"username\": \"do eiusmod\",\n  \"firstName\": \"irure Duis labori\",\n  \"lastName\": \"aute voluptate dolore in\",\n  \"email\": \"magna\",\n  \"password\": \"sunt ut commodo officia\",\n  \"phone\": \"veniam aliquip\",\n  \"userStatus\": 42889673\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) name that need to be updated"
												}
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "f0402f07-56e4-45ad-b175-714a85798c0e",
									"name": "User not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -66684654,\n  \"username\": \"do eiusmod\",\n  \"firstName\": \"irure Duis labori\",\n  \"lastName\": \"aute voluptate dolore in\",\n  \"email\": \"magna\",\n  \"password\": \"sunt ut commodo officia\",\n  \"phone\": \"veniam aliquip\",\n  \"userStatus\": 42889673\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) name that need to be updated"
												}
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"id": "f035c7d9-05f5-4ea3-9e11-1baefac03dad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "non do eiusmod magna ea",
											"description": "(Required) The name that needs to be deleted"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"id": "05486774-84c1-4307-bec8-d1069672505d",
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) The name that needs to be deleted"
												}
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "62475641-8abd-4c8b-9227-b0f5813068d2",
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": "non do eiusmod magna ea",
													"description": "(Required) The name that needs to be deleted"
												}
											]
										},
										"description": "This can only be done by the logged in user."
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"id": "ffe7fe87-adeb-4f6c-9593-d1459eeb5310"
				},
				{
					"name": "Create user",
					"id": "a9933e58-5973-4005-9dda-d96867d0f341",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -66684654,\n  \"username\": \"do eiusmod\",\n  \"firstName\": \"irure Duis labori\",\n  \"lastName\": \"aute voluptate dolore in\",\n  \"email\": \"magna\",\n  \"password\": \"sunt ut commodo officia\",\n  \"phone\": \"veniam aliquip\",\n  \"userStatus\": 42889673\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"id": "22670a30-6ab3-495a-bf19-ccd5b7eb2f5d",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -66684654,\n  \"username\": \"do eiusmod\",\n  \"firstName\": \"irure Duis labori\",\n  \"lastName\": \"aute voluptate dolore in\",\n  \"email\": \"magna\",\n  \"password\": \"sunt ut commodo officia\",\n  \"phone\": \"veniam aliquip\",\n  \"userStatus\": 42889673\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creates list of users with given input array",
					"id": "014826f4-c016-4dfb-81aa-d125962f09e6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": 32496337,\n    \"username\": \"ut officia velit ut\",\n    \"firstName\": \"non\",\n    \"lastName\": \"laborum tempor nulla\",\n    \"email\": \"ipsu\",\n    \"password\": \"ex irure ipsum ad laboris\",\n    \"phone\": \"in nisi laboris\",\n    \"userStatus\": -79971055\n  },\n  {\n    \"id\": -5894473,\n    \"username\": \"mollit magna do elit adipisicing\",\n    \"firstName\": \"deserunt magna sint irure\",\n    \"lastName\": \"ad officia adipisicing\",\n    \"email\": \"Duis\",\n    \"password\": \"Ut\",\n    \"phone\": \"sit labore\",\n    \"userStatus\": -87543297\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithArray",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithArray"
							]
						}
					},
					"response": [
						{
							"id": "8c76f58d-004c-4f9e-a659-e0474dcb3a95",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": 32496337,\n    \"username\": \"ut officia velit ut\",\n    \"firstName\": \"non\",\n    \"lastName\": \"laborum tempor nulla\",\n    \"email\": \"ipsu\",\n    \"password\": \"ex irure ipsum ad laboris\",\n    \"phone\": \"in nisi laboris\",\n    \"userStatus\": -79971055\n  },\n  {\n    \"id\": -5894473,\n    \"username\": \"mollit magna do elit adipisicing\",\n    \"firstName\": \"deserunt magna sint irure\",\n    \"lastName\": \"ad officia adipisicing\",\n    \"email\": \"Duis\",\n    \"password\": \"Ut\",\n    \"phone\": \"sit labore\",\n    \"userStatus\": -87543297\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithArray",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithArray"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Creates list of users with given input array",
					"id": "56571221-b18f-4846-8dea-1802c2f34fdd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"id\": -79290846,\n    \"username\": \"labore proident ut\",\n    \"firstName\": \"sed\",\n    \"lastName\": \"ut pariatur sit\",\n    \"email\": \"dolor commodo qui\",\n    \"password\": \"laboris\",\n    \"phone\": \"ut enim qui cupidatat\",\n    \"userStatus\": -11259203\n  },\n  {\n    \"id\": -68207574,\n    \"username\": \"consequat officia\",\n    \"firstName\": \"enim\",\n    \"lastName\": \"s\",\n    \"email\": \"ad nostrud ut\",\n    \"password\": \"ullamco culpa officia\",\n    \"phone\": \"ut officia amet Lorem\",\n    \"userStatus\": 47865577\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/createWithList",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": [
						{
							"id": "bfadee94-a2ec-4cf2-ada0-f4c97cdd0608",
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": -79290846,\n    \"username\": \"labore proident ut\",\n    \"firstName\": \"sed\",\n    \"lastName\": \"ut pariatur sit\",\n    \"email\": \"dolor commodo qui\",\n    \"password\": \"laboris\",\n    \"phone\": \"ut enim qui cupidatat\",\n    \"userStatus\": -11259203\n  },\n  {\n    \"id\": -68207574,\n    \"username\": \"consequat officia\",\n    \"firstName\": \"enim\",\n    \"lastName\": \"s\",\n    \"email\": \"ad nostrud ut\",\n    \"password\": \"ullamco culpa officia\",\n    \"phone\": \"ut officia amet Lorem\",\n    \"userStatus\": 47865577\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithList"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logs user into the system",
					"id": "d86f8100-a998-4061-a02a-f16561da5e21",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/login?username=non do eiusmod magna ea&password=non do eiusmod magna ea",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "non do eiusmod magna ea",
									"description": "(Required) The user name for login"
								},
								{
									"key": "password",
									"value": "non do eiusmod magna ea",
									"description": "(Required) The password for login in clear text"
								}
							]
						}
					},
					"response": [
						{
							"id": "c41ea817-2d50-4ddc-9a5d-cfab4bedc755",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=non do eiusmod magna ea&password=non do eiusmod magna ea",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "non do eiusmod magna ea",
											"description": "(Required) The user name for login"
										},
										{
											"key": "password",
											"value": "non do eiusmod magna ea",
											"description": "(Required) The password for login in clear text"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"disabled": false,
									"description": "date in UTC when token expires",
									"key": "X-Expires-After",
									"value": "2008-09-28T18:03:04.951Z"
								},
								{
									"disabled": false,
									"description": "calls per hour allowed by the user",
									"key": "X-Rate-Limit",
									"value": "26138718"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"non do eiusmod magna ea\""
						},
						{
							"id": "445d59d4-11e5-4666-96f2-21feb3e3cdea",
							"name": "Invalid username/password supplied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=non do eiusmod magna ea&password=non do eiusmod magna ea",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "non do eiusmod magna ea",
											"description": "(Required) The user name for login"
										},
										{
											"key": "password",
											"value": "non do eiusmod magna ea",
											"description": "(Required) The password for login in clear text"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Logs out current logged in user session",
					"id": "583725ec-3a7e-483c-973a-ea2c82813f01",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": [
						{
							"id": "b4c46ef0-6bba-441d-84a1-f51e4dc5a2ae",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "b14dedf1-1acf-45e4-be20-04f5c82ff9f2"
		}
	],
	"variable": [
		{
			"id": "037be766-ee9a-43d0-8db9-5e13bffb2ea3",
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	]
}